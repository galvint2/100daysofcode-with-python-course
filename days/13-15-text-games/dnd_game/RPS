import random


# Function to adjust the ranges based on human choices
def adjust_ranges(choices_dict):
    total_choices = sum(choices_dict.values())
    if total_choices == 0:
        return (333, 666)

    rock_ratio = choices_dict['scissors'] / total_choices
    paper_ratio = choices_dict['rock'] / total_choices
    scissors_ratio = choices_dict['paper'] / total_choices

    rock_boundary = int(rock_ratio * 1000)
    paper_boundary = rock_boundary + int(paper_ratio * 1000)

    return (rock_boundary, paper_boundary)


# Updated repeated game function with dynamic range adjustment
def rps_game_dynamic(rounds=5):
    choices_dict = {'rock': 0, 'paper': 0, 'scissors': 0}
    for i in range(rounds):
        rock_boundary, paper_boundary = adjust_ranges(choices_dict)
        player_choice = input(f"Round {i + 1}/{rounds} - Enter your choice (rock, paper, scissors): ").lower()

        while player_choice not in ["rock", "paper", "scissors"]:
            print("Invalid choice. Please enter 'rock', 'paper', or 'scissors'.")
            player_choice = input().lower()

        choices_dict[player_choice] += 1

        computer_number = random.randint(1, 1000)
        if computer_number <= rock_boundary:
            computer_choice = "rock"
        elif computer_number <= paper_boundary:
            computer_choice = "paper"
        else:
            computer_choice = "scissors"

        print(f"Computer's choice: {computer_choice}")

        if player_choice == computer_choice:
            print("It's a tie!")
        elif (player_choice == "rock" and computer_choice == "scissors") or \
                (player_choice == "scissors" and computer_choice == "paper") or \
                (player_choice == "paper" and computer_choice == "rock"):
            print("You win!")
        else:
            print("Computer wins!")
        print(rock_boundary)

# Note: To run this game, remove the comments from the following line and execute it in your local Python environment.
rps_game_dynamic()
